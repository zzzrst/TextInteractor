<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TextInteractor</name>
    </assembly>
    <members>
        <member name="T:TextInteractor.TextInteractor">
            <summary>
            Defines the <see cref="T:TextInteractor.TextInteractor" />.
            </summary>
        </member>
        <member name="F:TextInteractor.TextInteractor.reader">
            <summary>
            Defines the reader.
            </summary>
        </member>
        <member name="F:TextInteractor.TextInteractor.log">
            <summary>
            Defines the log.
            </summary>
        </member>
        <member name="M:TextInteractor.TextInteractor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextInteractor.TextInteractor"/> class.
            </summary>
            <param name="filePath">The path to the textFile.</param>
        </member>
        <member name="M:TextInteractor.TextInteractor.#ctor(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:TextInteractor.TextInteractor"/> class.
            </summary>
            <param name="filePath">The path to the textFile.</param>
            <param name="logger">Logger that is passed in.</param>
        </member>
        <member name="M:TextInteractor.TextInteractor.Open">
            <inheritdoc/>
        </member>
        <member name="M:TextInteractor.TextInteractor.Close">
            <inheritdoc/>
        </member>
        <member name="M:TextInteractor.TextInteractor.ReadLine">
            <inheritdoc/>
        </member>
        <member name="M:TextInteractor.TextInteractor.RestartReading">
            <inheritdoc/>
        </member>
        <member name="M:TextInteractor.TextInteractor.FinishedReading">
            <inheritdoc/>
        </member>
        <member name="M:TextInteractor.TextInteractor.Find(System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:TextInteractor.TextInteractor.Modify(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:TextInteractor.TextInteractor.Compare(TextInteractor.TextFile,System.String,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TextInteractor.TextInteractor.Compare(TextInteractor.TextFile,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:TextInteractor.TextInteractor.Find(System.String)">
            <summary>
            Find if string exist or not.
            </summary>
            <param name="expectedString">The string to be found.<see cref="T:System.String"/>.</param>
            <returns><code>true</code> if expectedString is found<see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:TextInteractor.TextInteractor.FindAndCount(System.String)">
            <summary>
            The FindAndCount.
            </summary>
            <param name="expectedString">The string to be found and counted.<see cref="T:System.String"/>.</param>
            <returns>The count of the expectedString in file <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:TextInteractor.TextInteractor.LineExactMatch(System.String,System.Int32)">
            <summary>
            The LineExactMatch.
            </summary>
            <param name="expectedString">The expected string value of the corresponding line number.<see cref="T:System.String"/>.</param>
            <param name="lineNum">The line number<see cref="T:System.Int32"/>.</param>
            <returns>The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:TextInteractor.TextInteractor.AddLine(System.String)">
            <summary>
            This method appends a line to the end of the text file.
            </summary>
            <param name="contents">The string to be added to the end of the file.</param>
        </member>
        <member name="M:TextInteractor.TextInteractor.CreateErrorLog(System.String)">
            <summary>
            Create a resulting error log file for the comparison.
            </summary>
            <param name="filePath">The file path to create the error log.<see cref="T:System.String"/>.</param>
        </member>
        <member name="T:TextInteractor.TextFile">
            <summary>
            This class represents a text file with data.
            </summary>
        </member>
        <member name="M:TextInteractor.TextFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TextInteractor.TextFile"/> class.
            </summary>
            <param name="filePath">The path to the textFile.</param>
        </member>
        <member name="M:TextInteractor.TextFile.#ctor(System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:TextInteractor.TextFile"/> class. We also open the file.
            </summary>
            <param name="filePath">The path to the textFile.</param>
            <param name="logger">Logger that is passed in.</param>
        </member>
        <member name="P:TextInteractor.TextFile.FilePath">
            <summary>
            Gets or sets the FilePath
            The full file path of the text file.
            </summary>
        </member>
        <member name="P:TextInteractor.TextFile.Opened">
            <summary>
            Gets or sets a value indicating whether the file has been opened / not.
            </summary>
        </member>
        <member name="P:TextInteractor.TextFile.Logger">
            <summary>
            Gets or sets the logger that will be used by TextFile.
            </summary>
        </member>
        <member name="M:TextInteractor.TextFile.Open">
            <summary>
            This method opens the text file for reading and writing. If file is already open, nothing will happen.
            </summary>
            <returns><code>true</code> if the text file successfully opens.</returns>
        </member>
        <member name="M:TextInteractor.TextFile.Close">
            <summary>
            This method closes the text file for reading and writing. If file not open, nothing will happen.
            </summary>
            <returns><code>true</code> if the text file successfully closes.</returns>
        </member>
        <member name="M:TextInteractor.TextFile.ReadLine">
            <summary>
            This method reads a line of characters in the file and returns the data as a string.
            </summary>
            <returns>A string from the text file.</returns>
        </member>
        <member name="M:TextInteractor.TextFile.RestartReading">
            <summary>
            This method resets the reader back to the beginning of the text file.
            </summary>
        </member>
        <member name="M:TextInteractor.TextFile.FinishedReading">
            <summary>
            This methods returns whether or not the reader is at the end of the text file.
            </summary>
            <returns><code>true</code> if the file has been finished reading.</returns>
        </member>
        <member name="M:TextInteractor.TextFile.Find(System.String,System.Int32)">
            <summary>
            This method tries to find the expected string in the specified line.
            </summary>
            <param name="expectedString"> String to be found.</param>
            <param name="line"> Line in the file to check, index starts at 1.</param>
            <returns><code>true</code> if the expected string is found at line.</returns>
        </member>
        <member name="M:TextInteractor.TextFile.Modify(System.Int32,System.String)">
            <summary>
            This methods modifies the textfile by replacing text in the text file.
            </summary>
            <param name="replaceType"> 0 means to replace once, 1 means to replaceAll, 2 means to replaceLine,3 means to replace regex<see cref="T:System.Int32"/>.</param>
            <param name="args">The args<see cref="T:System.String"/>.</param>
            <returns> <code>true</code> if the modification was successful. <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:TextInteractor.TextFile.Compare(TextInteractor.TextFile,System.String,System.Boolean,System.Boolean)">
            <summary>
            This method compares the text file with another text file.
            </summary>
            <param name="txtFile">Text file to compare.</param>
            <param name="resultFilePath">Text file that shows the comparison result when different. If there is a file name conflict, we will replace the file.</param>
            <param name="ignoreWhitespace">Set to true if we are going to ignore whitespace during comparison. Default is false.</param>
            <param name="caseInsensitive">Set to true if we are going to perform case insensitive comparison. Default is false.</param>
            <returns><code>true</code> if the contents of the text files match.</returns>
        </member>
        <member name="M:TextInteractor.TextFile.Compare(TextInteractor.TextFile,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            This method compares the text file with another text file specifying the top left and bottom right coordinates.
            If we consider the file to be a 2D matrix of characters, the startingLine and startingIndex would be the top left corner (x, y) respectively.
            The endingLine and endingIndex would be the bottom right coordinate on the bottom right corner.
            </summary>
            <param name="txtFile">The textfile that you want to compare with.<see cref="T:TextInteractor.TextFile"/>.</param>
            <param name="resultFilePath">Text file that shows the comparison result when different.</param>
            <param name="startingLine">The line index to start the comparison.<see cref="T:System.Int32"/>.</param>
            <param name="startingIndex">The character index to start the comparison.<see cref="T:System.Int32"/>.</param>
            <param name="endingLine">The line index to stop the comparison.<see cref="T:System.Int32"/>.</param>
            <param name="endingIndex">The character index to end the comparison.<see cref="T:System.Int32"/>.</param>
            <param name="ignoreWhitespace">Set to true if we are going to ignore whitespace during comparison. Default is false.</param>
            <param name="caseInsensitive">Set to true if we are going to perform case insensitive comparison. Default is false.</param>
            <returns><code>true</code> if the contents of the text file match.</returns>
        </member>
        <member name="T:TextInteractor.TextFileLogHelper">
            <summary>
            Defines the <see cref="T:TextInteractor.TextFileLogHelper" />.
            </summary>
        </member>
        <member name="P:TextInteractor.TextFileLogHelper.Logger">
            <summary>
            Gets or sets the logger to be used throughout this class.
            </summary>
        </member>
        <member name="M:TextInteractor.TextFileLogHelper.FirstDifferentChar(System.String,System.String)">
            <summary>
            The FirstDifferentChar.
            </summary>
            <param name="strA">The strA<see cref="T:System.String"/>.</param>
            <param name="strB">The strB<see cref="T:System.String"/>.</param>
            <returns>The <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:TextInteractor.TextFileLogHelper.LogBigTitle(System.String)">
            <summary>
            Creates a big title.
            </summary>
            <param name="title">The title<see cref="T:System.String"/>.</param>
        </member>
        <member name="M:TextInteractor.TextFileLogHelper.LogComparisonBeginning(TextInteractor.TextFile,TextInteractor.TextFile,System.Boolean,System.Boolean)">
            <summary>
            The LogComparisonBeginning.
            </summary>
            <param name="fileA">The first file to compare.<see cref="T:TextInteractor.TextFile"/>.</param>
            <param name="fileB">The second file to compare.<see cref="T:TextInteractor.TextFile"/>.</param>
            <param name="ignoreWhitespace">The flag set for comparison if whitespace is ignored or not.<see cref="T:System.Boolean"/>.</param>
            <param name="caseInsensitive">The flas set for case insensitive comparison.<see cref="T:System.Boolean"/>.</param>
        </member>
        <member name="M:TextInteractor.TextFileLogHelper.LogComparisonEnd(TextInteractor.TextFile,System.Boolean,System.String[])">
            <summary>
            Helper method to log when the comparison of files have ended.
            </summary>
            <param name="fileA">The first file to compare.<see cref="T:TextInteractor.TextFile"/>.</param>
            <param name="passed">Boolean result if the file comparison.<see cref="T:System.Boolean"/>.</param>
            <param name="reasons">The reasons provided for the result.<see cref="T:string[]"/>.</param>
        </member>
        <member name="M:TextInteractor.TextFileLogHelper.LogComparisonEnd(TextInteractor.TextFile,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            The LogComparisonEnd.
            </summary>
            <param name="fileA">The first file to compare.<see cref="T:TextInteractor.TextFile"/>.</param>
            <param name="passed">Boolean result if the file comparison.<see cref="T:System.Boolean"/>.</param>
            <param name="reasons">The reasons provided for the result.<see cref="T:List{string}"/>.</param>
        </member>
        <member name="M:TextInteractor.TextFileLogHelper.LogEnumerableAsOneLine(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Helper method to log an IEnumarable string in one line.
            </summary>
            <param name="list">The list<see cref="T:IEnumerable{string}"/>.</param>
        </member>
    </members>
</doc>
